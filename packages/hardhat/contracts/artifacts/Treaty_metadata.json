{
	"compiler": {
		"version": "0.7.5+commit.eb77ed08"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_initialText",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_lawyerAddress",
						"type": "address"
					}
				],
				"name": "ChangeLawyer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_lockTime",
						"type": "uint256"
					}
				],
				"name": "Locked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_treatyAddress",
						"type": "address"
					}
				],
				"name": "MakeActive",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "MutuallyWithdrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_signer",
						"type": "address"
					}
				],
				"name": "RegisterAsSigner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_signer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "_hash",
						"type": "bytes32"
					}
				],
				"name": "SignHash",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_signer",
						"type": "address"
					}
				],
				"name": "SignedBy",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_treatyAddress",
						"type": "address"
					}
				],
				"name": "SignedByAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum TreatyStateMachine.States",
						"name": "_newState",
						"type": "uint8"
					}
				],
				"name": "StateChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "UnLocked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "UnsignedTreatyTextDeleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_signer",
						"type": "address"
					}
				],
				"name": "WithdrawnFromTreaty",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "_text",
						"type": "string"
					}
				],
				"name": "WriteToTreaty",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_bytes",
						"type": "bytes"
					}
				],
				"name": "calcSHA3",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newLawyer",
						"type": "address"
					}
				],
				"name": "changeLawyer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "changeOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "creationTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "disown",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastSignedHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastSignedText",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastUnsignedHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastUnsignedText",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLocked",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumSignatures",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumSigned",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumUnsigned",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getSignedTreatyText",
				"outputs": [
					{
						"internalType": "string",
						"name": "treatyText",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSignersAsText",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUnsignedTreatyText",
				"outputs": [
					{
						"internalType": "string",
						"name": "treatyText",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "id",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastStateChange",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lawyerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockTime",
						"type": "uint256"
					}
				],
				"name": "lockFor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_days",
						"type": "uint256"
					}
				],
				"name": "lockForDays",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_months",
						"type": "uint256"
					}
				],
				"name": "lockForMonths",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "locked",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "makeActive",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "makeBinding",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "okToUnlock",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "registerAsSigner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "releaseAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_hash",
						"type": "bytes32"
					}
				],
				"name": "signHash",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "signTreaty",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "signatureList",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "signatureState",
				"outputs": [
					{
						"internalType": "enum Treaty.SignatureState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "signedHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "signedTreatyText",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treatyState",
				"outputs": [
					{
						"internalType": "enum TreatyStateMachine.States",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "undoBinding",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "unsignedHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "unsignedTreatyText",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawFromTreaty",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_text",
						"type": "string"
					}
				],
				"name": "writeToTreaty",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"events": {
				"SignedBy(address)": {
					"notice": "Events ///"
				}
			},
			"kind": "user",
			"methods": {
				"id()": {
					"notice": "Treaty info ///"
				},
				"signatureList(uint256)": {
					"notice": "Addresses ///"
				},
				"signatureState(address)": {
					"notice": "Signature state ///"
				},
				"unsignedHash(uint256)": {
					"notice": "Agreement text (bytes32 hash) ///"
				},
				"unsignedTreatyText(uint256)": {
					"notice": "Agreement text (plain text) ///"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/packages/hardhat/contracts/Treaty.sol": "Treaty"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/packages/hardhat/contracts/Treaty.sol": {
			"keccak256": "0x4a282a4916e5c2fda9fd7c0161fe153de6a61cce6622dc4e04d6439fd7f9f9ff",
			"urls": [
				"bzz-raw://26aaa11baf5e2c550986625cd430f0fdfe702e38ed04ceeb505bff658b40d7a6",
				"dweb:/ipfs/QmYwW7gTiWTGezEd3c6AwZCCFBcPqZU2WsqeVFfSXBrQVa"
			]
		},
		"localhost/packages/hardhat/contracts/TreatyStateMachine.sol": {
			"keccak256": "0xe778577b746c0d6ed26f555fd6313eef1360ca58ceed937961ad14ea42630e06",
			"urls": [
				"bzz-raw://396593df57def31e33acf85ce3b40ebd5d5826489e91fa36bd8a91883ec7ddf0",
				"dweb:/ipfs/QmVcGfTWzWvFL7paXKU6hXvPtpLepYgP8UFUB9QwkmWr5u"
			]
		},
		"localhost/packages/hardhat/contracts/access/AccessRestriction.sol": {
			"keccak256": "0x632d066e46dec58334c16318f36a2a1d596f437ac07c4c16077436e1f9749975",
			"urls": [
				"bzz-raw://1b28c05ff2000c272d1aa3e0776577a49017dbfee7c95ee0ccc0890a87f88f34",
				"dweb:/ipfs/QmYKmr7Ak4aRLj2i6mGxmHqHu5ZX5ntVK7t3qeBLYmfTHx"
			]
		},
		"localhost/packages/hardhat/contracts/access/Lockable.sol": {
			"keccak256": "0x2b353eafbe9d13c6b299a4cab34e42b4380bfbb7e2c7d41444fa01c0267cda5b",
			"urls": [
				"bzz-raw://c26026333e429fa87df588d0973a38a2894f85fe027ec5fb9223ec408d0ee415",
				"dweb:/ipfs/QmX6r5jQQUbh1Resb3xfL1Bi95BiW5poCNp1oYLNq3PGEy"
			]
		},
		"localhost/packages/hardhat/contracts/lib/StringUtils.sol": {
			"keccak256": "0xda0a83991c73f1500f542badc2986fcee49a31eb551dc8c140ab9761f64100ef",
			"urls": [
				"bzz-raw://807f58b229f79b5f2d48d8ee1adfa3fc947330a88ae922f302bf393ecc5024a7",
				"dweb:/ipfs/QmbBNFJCqvpgyY7Sd25z5sty95H6BEKrRoLsD8aqfNiQxZ"
			]
		},
		"localhost/packages/hardhat/contracts/lib/hardhat/console.sol": {
			"keccak256": "0xd3f9eb69241af8de5174a6cfa3da3cbc94e351dee495002d8675b665865ba417",
			"license": "MIT",
			"urls": [
				"bzz-raw://68d7929eff6d6b56882da604050b60b25d0281b4b4e0333a196868e8dc89b1b5",
				"dweb:/ipfs/QmeWYGyN2DxpFLH4KMMuTGQAHZrkQBaMTotrEJnEHLApuk"
			]
		}
	},
	"version": 1
}